/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Phosphate_Backbone: THREE.Mesh
    ['Adenine_(A)001']: THREE.Mesh
    ['Thymine_(T)001']: THREE.Mesh
    ['Adenine_(A)002']: THREE.Mesh
    ['Thymine_(T)002']: THREE.Mesh
    ['Adenine_(A)003']: THREE.Mesh
    ['Thymine_(T)003']: THREE.Mesh
    ['Adenine_(A)004']: THREE.Mesh
    ['Thymine_(T)004']: THREE.Mesh
    ['Cytosine_(C)']: THREE.Mesh
    ['Guanine_(G)']: THREE.Mesh
    ['Cytosine_(C)001']: THREE.Mesh
    ['Guanine_(G)001']: THREE.Mesh
    ['Cytosine_(C)002']: THREE.Mesh
    ['Guanine_(G)002']: THREE.Mesh
    ['Cytosine_(C)003']: THREE.Mesh
    ['Guanine_(G)003']: THREE.Mesh
    ['Cytosine_(C)004']: THREE.Mesh
    ['Guanine_(G)004']: THREE.Mesh
  }
  materials: {
    White: THREE.MeshStandardMaterial
    Red: THREE.MeshStandardMaterial
    Blue: THREE.MeshStandardMaterial
    Yellow: THREE.MeshStandardMaterial
    Green: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/dna-6.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Phosphate_Backbone.geometry} material={materials.White} />
      <mesh
        geometry={nodes['Adenine_(A)001'].geometry}
        material={nodes['Adenine_(A)001'].material}
        position={[-0.26, 3.02, -0.12]}
        rotation={[-0.09, -0.46, -1.49]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Thymine_(T)001'].geometry}
        material={nodes['Thymine_(T)001'].material}
        position={[0.23, 3.08, 0.11]}
        rotation={[-0.09, -0.46, -1.49]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Adenine_(A)002'].geometry}
        material={nodes['Adenine_(A)002'].material}
        position={[0.27, 2.47, -0.08]}
        rotation={[-2.79, -0.27, 1.79]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Thymine_(T)002'].geometry}
        material={nodes['Thymine_(T)002'].material}
        position={[-0.24, 2.53, 0.09]}
        rotation={[-2.79, -0.27, 1.79]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Adenine_(A)003'].geometry}
        material={nodes['Adenine_(A)003'].material}
        position={[0.17, 2.2, 0.22]}
        rotation={[3.1, 0.95, 1.74]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Thymine_(T)003'].geometry}
        material={nodes['Thymine_(T)003'].material}
        position={[-0.14, 2.27, -0.22]}
        rotation={[3.1, 0.95, 1.74]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Adenine_(A)004'].geometry}
        material={nodes['Adenine_(A)004'].material}
        position={[0.04, 1.41, -0.32]}
        rotation={[-0.48, -1.34, -1.88]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Thymine_(T)004'].geometry}
        material={nodes['Thymine_(T)004'].material}
        position={[0.16, 1.5, 0.2]}
        rotation={[-0.48, -1.34, -1.88]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Cytosine_(C)'].geometry}
        material={nodes['Cytosine_(C)'].material}
        position={[0.06, 3.52, 0.19]}
        rotation={[-0.07, -1.26, -1.74]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Guanine_(G)'].geometry}
        material={nodes['Guanine_(G)'].material}
        position={[-0.1, 3.57, -0.31]}
        rotation={[-0.07, -1.26, -1.74]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Cytosine_(C)001'].geometry}
        material={nodes['Cytosine_(C)001'].material}
        position={[-0.18, 3.29, 0.14]}
        rotation={[-2.53, -0.72, 1.87]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Guanine_(G)001'].geometry}
        material={nodes['Guanine_(G)001'].material}
        position={[0.2, 3.35, -0.23]}
        rotation={[-2.53, -0.72, 1.87]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Cytosine_(C)002'].geometry}
        material={nodes['Cytosine_(C)002'].material}
        position={[-0.04, 2.76, -0.27]}
        rotation={[-1.8, 1.36, 0.13]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Guanine_(G)002'].geometry}
        material={nodes['Guanine_(G)002'].material}
        position={[-0.03, 2.81, 0.27]}
        rotation={[-1.8, 1.36, 0.13]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Cytosine_(C)003'].geometry}
        material={nodes['Cytosine_(C)003'].material}
        position={[-0.11, 1.97, 0.22]}
        rotation={[-3.12, -1.13, 1.48]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Guanine_(G)003'].geometry}
        material={nodes['Guanine_(G)003'].material}
        position={[0.12, 2.03, -0.27]}
        rotation={[-3.12, -1.13, 1.48]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Cytosine_(C)004'].geometry}
        material={nodes['Cytosine_(C)004'].material}
        position={[-0.27, 1.72, 0.02]}
        rotation={[3.1, 0, 1.47]}
        scale={[0.05, 0.25, 0.05]}
      />
      <mesh
        geometry={nodes['Guanine_(G)004'].geometry}
        material={nodes['Guanine_(G)004'].material}
        position={[0.26, 1.77, 0.02]}
        rotation={[3.1, 0, 1.47]}
        scale={[0.05, 0.25, 0.05]}
      />
    </group>
  )
}

useGLTF.preload('/dna-6.gltf')
